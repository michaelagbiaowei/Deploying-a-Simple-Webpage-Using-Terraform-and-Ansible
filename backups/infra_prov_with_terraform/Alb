#data "aws_subnet" "public" {
# for_each = data.aws_subnet.public[each.key].id
# id       = each.value
#}

data "aws_vpc" "existing_vpc" {
  default = true
}

resource "aws_subnet" "sub-1" {
  vpc_id     = aws_vpc.existing_vpc.id
  cidr_block = "172.30.32.0/20"

  tags = {
    Name = "Main"
  }
}

resource "aws_subnet" "sub-2" {
  vpc_id     = aws_vpc.existing_vpc.id
  cidr_block = "172.31.31.0/20"

  tags = {
    Name = "Main"
  }
}


#for subnet in aws_subnet.public : subnet.id
# create application load balancer
resource "aws_lb" "Application_load_balancer" {
  name                       = "server-alb"
  internal                   = false
  load_balancer_type         = "application"
  security_groups            = [aws_security_group.server-sg.id]
  subnets                    = [aws_subnet.sub-1.id, aws_subnet.sub-2.id]
  enable_deletion_protection = false


  tags = {
    Name = "server-alb"
  }
}

# create target group
resource "aws_lb_target_group" "alb_target_group" {
  name        = "server-tg"
  target_type = "instance"
  port        = 80
  protocol    = "HTTP"
  vpc_id      = data.aws_vpc.existing_vpc.id

  health_check {
    enabled             = true
    interval            = 300
    path                = "/"
    timeout             = 60
    matcher             = 200
    healthy_threshold   = 5
    unhealthy_threshold = 5
  }

  lifecycle {
    create_before_destroy = true
  }
}

# create a listener on port 80 with redirect action
resource "aws_lb_listener" "alb_http_listener" {
  load_balancer_arn = aws_lb.Application_load_balancer.arn
  port              = 80
  protocol          = "HTTP"

  default_action {
    type = "redirect"

    redirect {
      port        = 443
      protocol    = "HTTPS"
      status_code = "HTTP_301"
    }
  }
}

# create a listener on port 443 with forward action
resource "aws_lb_listener" "alb_https_listener" {
  load_balancer_arn = aws_lb.Application_load_balancer.arn
  port              = 443
  protocol          = "HTTPS"
  # ssl_policy         = "ELBSecurityPolicy-2016-08"
  # certificate_arn    = 

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.alb_target_group.arn
  }
}

# the target group attachments

resource "aws_lb_target_group_attachment" "target_attach" {
  target_group_arn = aws_lb_target_group.alb_target_group.arn
  target_id        = aws_instance.server.*.id
  port             = 80
}
